# Unique name for this workflow
name: Merge PR on SESH_CQA branch

# Definition when the workflow should run
on:
    push:
      # This workflow will run when a pull request is merged

      
      branches: [ develop ]
      # We only care about changes to the force-app directory. This prevents the job from running
      # when changing non-salesforce files (like this yml file).
      paths:
        - 'force-app/**'


# Jobs to be executed
jobs:
    push-read-pullRequest:
        runs-on: ubuntu-latest
        if: ${{ github.actor != 'dependabot[bot]' }}
        steps:
            # Install nodejs
            - uses: actions/setup-node@v2
              with:
                node-version: '16'

            # Checkout the source code
            - name: 'Checkout source code'
              uses: actions/checkout@v2
              with:
                fetch-depth: 0
                
            # print pr title
            - name : 'Print Title of PR'
              run: echo The Title of your PR is ${{ github.event.pull_request.title }}
              
            # print pr title v2
            - name : 'Print Title of PR'
              run: echo The Title of your PR is ${{ github.event}}

            # Read the body of the pull request and extract the names of the
            # tests classes that should be run when deploying the changes on this commit

            # The tests should be specified in the PR body using the following syntax
            # Apex::[CommunitiesLoginControllerTest,MyProfilePageControllerTest,AnotherTestClass]::Apex
            # This special delimeter can be added to the PR template so that your team doesn't have to remember the syntax
            - name: 'Read PR Body'
              env:
                # The pull request body is available through the github context object
                # we put the body of the pull request in an env variable (only available to this step)
                PAYLOAD: ${{github.event.head_commit_message}}

              # Here we print the content of the environment variable and
              # pipe to a a text file.
              # Then we call the local script parsePR.js, which will create
              # a new file called testsToRun.txt. This file will have the list
              # of tests to run separated by a comma

              # Finally, we add the list of tests to the $GITHUB_ENV variable
              # as this allows us to reference the list in a subsequent step.  If you
              # were using a normal env variable, its value would not be available outside this step.
              run: |
                  echo $PAYLOAD > ./pr_body.txt
                  node ./parsePR.js
                  TESTS=$(cat testsToRun.txt)
                  echo "APEX_TESTS=$TESTS" >> $GITHUB_ENV

         
